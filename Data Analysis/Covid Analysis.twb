<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Select Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-04-09#'>
        <calculation class='tableau' formula='#2020-04-09#' />
      </column>
      <column caption='Select End Date' datatype='date' name='[Select Start Date (copy)_1352487297516593157]' param-domain-type='any' role='measure' type='quantitative' value='#2021-10-25#'>
        <calculation class='tableau' formula='#2021-10-25#' />
      </column>
    </datasource>
    <datasource caption='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data' inline='true' name='federated.0g2yqtv099nnij1eau2tt1c6xiqf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data' name='textscan.1csxbem0eg7da21ca38xo0tajjqv'>
            <connection class='textscan' directory='C:/Users/Dell/Downloads' filename='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1csxbem0eg7da21ca38xo0tajjqv' name='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv' table='[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data#csv]' type='table'>
          <columns character-set='UTF-16LE' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='string' name='Continent' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='boolean' name='Date Range Selected' ordinal='2' />
            <column datatype='string' name='Excess Mortality' ordinal='3' />
            <column datatype='string' name='Excess Mortality Cumulative' ordinal='4' />
            <column datatype='string' name='Excess Mortality Cumulative Absolute' ordinal='5' />
            <column datatype='string' name='Excess Mortality Cumulative Per Million' ordinal='6' />
            <column datatype='string' name='Extreme Poverty' ordinal='7' />
            <column datatype='string' name='Female Smokers' ordinal='8' />
            <column datatype='string' name='Hosp Patients' ordinal='9' />
            <column datatype='string' name='Hosp Patients Per Million' ordinal='10' />
            <column datatype='string' name='Icu Patients' ordinal='11' />
            <column datatype='string' name='Icu Patients Per Million' ordinal='12' />
            <column datatype='string' name='Iso Code' ordinal='13' />
            <column datatype='string' name='Location' ordinal='14' />
            <column datatype='string' name='Location (copy)' ordinal='15' />
            <column datatype='string' name='Location (geo)' ordinal='16' />
            <column datatype='string' name='Male Smokers' ordinal='17' />
            <column datatype='string' name='New Tests' ordinal='18' />
            <column datatype='string' name='New Tests Per Thousand' ordinal='19' />
            <column datatype='string' name='New Tests Smoothed' ordinal='20' />
            <column datatype='string' name='New Tests Smoothed Per Thousand' ordinal='21' />
            <column datatype='string' name='Positive Rate' ordinal='22' />
            <column datatype='string' name='Tests Per Case' ordinal='23' />
            <column datatype='string' name='Tests Units' ordinal='24' />
            <column datatype='string' name='Total Tests' ordinal='25' />
            <column datatype='string' name='Total Tests Per Thousand' ordinal='26' />
            <column datatype='string' name='Weekly Hosp Admissions' ordinal='27' />
            <column datatype='string' name='Weekly Hosp Admissions Per Million' ordinal='28' />
            <column datatype='string' name='Weekly Icu Admissions' ordinal='29' />
            <column datatype='string' name='Weekly Icu Admissions Per Million' ordinal='30' />
            <column datatype='real' name='Aged 65 Older' ordinal='31' />
            <column datatype='real' name='Aged 70 Older' ordinal='32' />
            <column datatype='real' name='Cardiovasc Death Rate' ordinal='33' />
            <column datatype='real' name='Diabetes Prevalence' ordinal='34' />
            <column datatype='real' name='Fully Vaccinated over Population' ordinal='35' />
            <column datatype='real' name='Gdp Per Capita' ordinal='36' />
            <column datatype='real' name='Handwashing Facilities' ordinal='37' />
            <column datatype='real' name='Hospital Beds Per Thousand' ordinal='38' />
            <column datatype='real' name='Human Development Index' ordinal='39' />
            <column datatype='real' name='Life Expectancy' ordinal='40' />
            <column datatype='real' name='Median Age' ordinal='41' />
            <column datatype='integer' name='New Cases' ordinal='42' />
            <column datatype='real' name='New Cases Per Million' ordinal='43' />
            <column datatype='real' name='New Cases Smoothed' ordinal='44' />
            <column datatype='real' name='New Cases Smoothed Per Million' ordinal='45' />
            <column datatype='integer' name='New Deaths' ordinal='46' />
            <column datatype='real' name='New Deaths Per Million' ordinal='47' />
            <column datatype='real' name='New Deaths Smoothed' ordinal='48' />
            <column datatype='real' name='New Deaths Smoothed Per Million' ordinal='49' />
            <column datatype='integer' name='New Vaccinations' ordinal='50' />
            <column datatype='real' name='New Vaccinations over Population' ordinal='51' />
            <column datatype='integer' name='New Vaccinations Smoothed' ordinal='52' />
            <column datatype='integer' name='New Vaccinations Smoothed Per Million' ordinal='53' />
            <column datatype='real' name='Not Vaccinated over Population ' ordinal='54' />
            <column datatype='integer' name='People Fully Vaccinated' ordinal='55' />
            <column datatype='real' name='People Fully Vaccinated Per Hundred' ordinal='56' />
            <column datatype='integer' name='People Vaccinated' ordinal='57' />
            <column datatype='real' name='People Vaccinated over Population (delta)' ordinal='58' />
            <column datatype='real' name='People Vaccinated Per Hundred' ordinal='59' />
            <column datatype='integer' name='Population' ordinal='60' />
            <column datatype='real' name='Population Density' ordinal='61' />
            <column datatype='real' name='Reproduction Rate' ordinal='62' />
            <column datatype='real' name='Stringency Index' ordinal='63' />
            <column datatype='integer' name='Total Boosters' ordinal='64' />
            <column datatype='real' name='Total Boosters Per Hundred' ordinal='65' />
            <column datatype='integer' name='Total Cases' ordinal='66' />
            <column datatype='real' name='Total Cases Per Million' ordinal='67' />
            <column datatype='integer' name='Total Deaths' ordinal='68' />
            <column datatype='real' name='Total Deaths Per Million' ordinal='69' />
            <column datatype='integer' name='Total Vaccinations' ordinal='70' />
            <column datatype='real' name='Total Vaccinations Per Hundred' ordinal='71' />
            <column datatype='real' name='Vaccinated over Population' ordinal='72' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1csxbem0eg7da21ca38xo0tajjqv' name='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv' table='[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data#csv]' type='table'>
          <columns character-set='UTF-16LE' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='string' name='Continent' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='boolean' name='Date Range Selected' ordinal='2' />
            <column datatype='string' name='Excess Mortality' ordinal='3' />
            <column datatype='string' name='Excess Mortality Cumulative' ordinal='4' />
            <column datatype='string' name='Excess Mortality Cumulative Absolute' ordinal='5' />
            <column datatype='string' name='Excess Mortality Cumulative Per Million' ordinal='6' />
            <column datatype='string' name='Extreme Poverty' ordinal='7' />
            <column datatype='string' name='Female Smokers' ordinal='8' />
            <column datatype='string' name='Hosp Patients' ordinal='9' />
            <column datatype='string' name='Hosp Patients Per Million' ordinal='10' />
            <column datatype='string' name='Icu Patients' ordinal='11' />
            <column datatype='string' name='Icu Patients Per Million' ordinal='12' />
            <column datatype='string' name='Iso Code' ordinal='13' />
            <column datatype='string' name='Location' ordinal='14' />
            <column datatype='string' name='Location (copy)' ordinal='15' />
            <column datatype='string' name='Location (geo)' ordinal='16' />
            <column datatype='string' name='Male Smokers' ordinal='17' />
            <column datatype='string' name='New Tests' ordinal='18' />
            <column datatype='string' name='New Tests Per Thousand' ordinal='19' />
            <column datatype='string' name='New Tests Smoothed' ordinal='20' />
            <column datatype='string' name='New Tests Smoothed Per Thousand' ordinal='21' />
            <column datatype='string' name='Positive Rate' ordinal='22' />
            <column datatype='string' name='Tests Per Case' ordinal='23' />
            <column datatype='string' name='Tests Units' ordinal='24' />
            <column datatype='string' name='Total Tests' ordinal='25' />
            <column datatype='string' name='Total Tests Per Thousand' ordinal='26' />
            <column datatype='string' name='Weekly Hosp Admissions' ordinal='27' />
            <column datatype='string' name='Weekly Hosp Admissions Per Million' ordinal='28' />
            <column datatype='string' name='Weekly Icu Admissions' ordinal='29' />
            <column datatype='string' name='Weekly Icu Admissions Per Million' ordinal='30' />
            <column datatype='real' name='Aged 65 Older' ordinal='31' />
            <column datatype='real' name='Aged 70 Older' ordinal='32' />
            <column datatype='real' name='Cardiovasc Death Rate' ordinal='33' />
            <column datatype='real' name='Diabetes Prevalence' ordinal='34' />
            <column datatype='real' name='Fully Vaccinated over Population' ordinal='35' />
            <column datatype='real' name='Gdp Per Capita' ordinal='36' />
            <column datatype='real' name='Handwashing Facilities' ordinal='37' />
            <column datatype='real' name='Hospital Beds Per Thousand' ordinal='38' />
            <column datatype='real' name='Human Development Index' ordinal='39' />
            <column datatype='real' name='Life Expectancy' ordinal='40' />
            <column datatype='real' name='Median Age' ordinal='41' />
            <column datatype='integer' name='New Cases' ordinal='42' />
            <column datatype='real' name='New Cases Per Million' ordinal='43' />
            <column datatype='real' name='New Cases Smoothed' ordinal='44' />
            <column datatype='real' name='New Cases Smoothed Per Million' ordinal='45' />
            <column datatype='integer' name='New Deaths' ordinal='46' />
            <column datatype='real' name='New Deaths Per Million' ordinal='47' />
            <column datatype='real' name='New Deaths Smoothed' ordinal='48' />
            <column datatype='real' name='New Deaths Smoothed Per Million' ordinal='49' />
            <column datatype='integer' name='New Vaccinations' ordinal='50' />
            <column datatype='real' name='New Vaccinations over Population' ordinal='51' />
            <column datatype='integer' name='New Vaccinations Smoothed' ordinal='52' />
            <column datatype='integer' name='New Vaccinations Smoothed Per Million' ordinal='53' />
            <column datatype='real' name='Not Vaccinated over Population ' ordinal='54' />
            <column datatype='integer' name='People Fully Vaccinated' ordinal='55' />
            <column datatype='real' name='People Fully Vaccinated Per Hundred' ordinal='56' />
            <column datatype='integer' name='People Vaccinated' ordinal='57' />
            <column datatype='real' name='People Vaccinated over Population (delta)' ordinal='58' />
            <column datatype='real' name='People Vaccinated Per Hundred' ordinal='59' />
            <column datatype='integer' name='Population' ordinal='60' />
            <column datatype='real' name='Population Density' ordinal='61' />
            <column datatype='real' name='Reproduction Rate' ordinal='62' />
            <column datatype='real' name='Stringency Index' ordinal='63' />
            <column datatype='integer' name='Total Boosters' ordinal='64' />
            <column datatype='real' name='Total Boosters Per Hundred' ordinal='65' />
            <column datatype='integer' name='Total Cases' ordinal='66' />
            <column datatype='real' name='Total Cases Per Million' ordinal='67' />
            <column datatype='integer' name='Total Deaths' ordinal='68' />
            <column datatype='real' name='Total Deaths Per Million' ordinal='69' />
            <column datatype='integer' name='Total Vaccinations' ordinal='70' />
            <column datatype='real' name='Total Vaccinations Per Hundred' ordinal='71' />
            <column datatype='real' name='Vaccinated over Population' ordinal='72' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-16LE&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date Range Selected</remote-name>
            <remote-type>11</remote-type>
            <local-name>[Date Range Selected]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Date Range Selected</remote-alias>
            <ordinal>2</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Excess Mortality</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Excess Mortality]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Excess Mortality</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Excess Mortality Cumulative</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Excess Mortality Cumulative]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Excess Mortality Cumulative</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Excess Mortality Cumulative Absolute</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Excess Mortality Cumulative Absolute]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Excess Mortality Cumulative Absolute</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Excess Mortality Cumulative Per Million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Excess Mortality Cumulative Per Million]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Excess Mortality Cumulative Per Million</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Extreme Poverty</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Extreme Poverty]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Extreme Poverty</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Female Smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Female Smokers]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Female Smokers</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hosp Patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Hosp Patients]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Hosp Patients</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hosp Patients Per Million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Hosp Patients Per Million]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Hosp Patients Per Million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Icu Patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Icu Patients]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Icu Patients</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Icu Patients Per Million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Icu Patients Per Million]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Icu Patients Per Million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Iso Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Iso Code]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Iso Code</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location (copy)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location (copy)]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Location (copy)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location (geo)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location (geo)]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Location (geo)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Male Smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Male Smokers]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Male Smokers</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[New Tests]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Tests</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Tests Per Thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[New Tests Per Thousand]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Tests Per Thousand</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Tests Smoothed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[New Tests Smoothed]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Tests Smoothed</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Tests Smoothed Per Thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[New Tests Smoothed Per Thousand]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Tests Smoothed Per Thousand</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive Rate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Positive Rate]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Positive Rate</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests Per Case</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Tests Per Case]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Tests Per Case</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tests Units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Tests Units]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Tests Units</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Total Tests]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Total Tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Tests Per Thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Total Tests Per Thousand]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Total Tests Per Thousand</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weekly Hosp Admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Weekly Hosp Admissions]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Weekly Hosp Admissions</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weekly Hosp Admissions Per Million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Weekly Hosp Admissions Per Million]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Weekly Hosp Admissions Per Million</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weekly Icu Admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Weekly Icu Admissions]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Weekly Icu Admissions</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weekly Icu Admissions Per Million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Weekly Icu Admissions Per Million]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Weekly Icu Admissions Per Million</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aged 65 Older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Aged 65 Older]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Aged 65 Older</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aged 70 Older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Aged 70 Older]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Aged 70 Older</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cardiovasc Death Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cardiovasc Death Rate]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Cardiovasc Death Rate</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diabetes Prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Diabetes Prevalence]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Diabetes Prevalence</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fully Vaccinated over Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fully Vaccinated over Population]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Fully Vaccinated over Population</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gdp Per Capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gdp Per Capita]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Gdp Per Capita</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Handwashing Facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Handwashing Facilities]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Handwashing Facilities</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hospital Beds Per Thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hospital Beds Per Thousand]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Hospital Beds Per Thousand</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Human Development Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Human Development Index]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Human Development Index</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life Expectancy]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Life Expectancy</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median Age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Median Age]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Median Age</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New Cases]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Cases</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases Per Million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Cases Per Million]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Cases Per Million</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases Smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Cases Smoothed]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Cases Smoothed</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Cases Smoothed Per Million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Cases Smoothed Per Million]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Cases Smoothed Per Million</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New Deaths]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Deaths</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths Per Million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths Per Million]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Deaths Per Million</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths Smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths Smoothed]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Deaths Smoothed</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Deaths Smoothed Per Million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Deaths Smoothed Per Million]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Deaths Smoothed Per Million</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New Vaccinations]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Vaccinations</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Vaccinations over Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[New Vaccinations over Population]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Vaccinations over Population</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Vaccinations Smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New Vaccinations Smoothed]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Vaccinations Smoothed</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New Vaccinations Smoothed Per Million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New Vaccinations Smoothed Per Million]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>New Vaccinations Smoothed Per Million</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Not Vaccinated over Population </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Not Vaccinated over Population ]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Not Vaccinated over Population </remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People Fully Vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[People Fully Vaccinated]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>People Fully Vaccinated</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People Fully Vaccinated Per Hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[People Fully Vaccinated Per Hundred]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>People Fully Vaccinated Per Hundred</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People Vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[People Vaccinated]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>People Vaccinated</remote-alias>
            <ordinal>57</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People Vaccinated over Population (delta)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[People Vaccinated over Population (delta)]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>People Vaccinated over Population (delta)</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>People Vaccinated Per Hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[People Vaccinated Per Hundred]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>People Vaccinated Per Hundred</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>60</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population Density]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Population Density</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Reproduction Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Reproduction Rate]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Reproduction Rate</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stringency Index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Stringency Index]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Stringency Index</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Boosters</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Boosters]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Total Boosters</remote-alias>
            <ordinal>64</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Boosters Per Hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Boosters Per Hundred]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Total Boosters Per Hundred</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Cases]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Total Cases</remote-alias>
            <ordinal>66</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cases Per Million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Cases Per Million]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Total Cases Per Million</remote-alias>
            <ordinal>67</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Deaths]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Total Deaths</remote-alias>
            <ordinal>68</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths Per Million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Deaths Per Million]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Total Deaths Per Million</remote-alias>
            <ordinal>69</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Vaccinations]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Total Vaccinations</remote-alias>
            <ordinal>70</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Vaccinations Per Hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Vaccinations Per Hundred]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Total Vaccinations Per Hundred</remote-alias>
            <ordinal>71</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vaccinated over Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Vaccinated over Population]</local-name>
            <parent-name>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv]</parent-name>
            <remote-alias>Vaccinated over Population</remote-alias>
            <ordinal>72</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Share of People Partially Vaccinated Over Population' datatype='real' name='[Calculation_1352487297497276416]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([People Vaccinated])/ MAX([Population])' />
      </column>
      <column caption='Share of People Not Vaccinated Over Population' datatype='real' name='[Calculation_1352487297497726977]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1-[Calculation_1352487297497276416]' />
      </column>
      <column caption='Share of People Fully Vaccinated Over Population' datatype='real' name='[Calculation_1352487297500737540]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([People Fully Vaccinated])/ MAX([Population])' />
      </column>
      <column caption='Filter Selected Date' datatype='boolean' name='[Calculation_1352487297516810246]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='Date &gt;= [Parameters].[Parameter 1] AND [Date]&lt;=[Parameters].[Select Start Date (copy)_1352487297516593157]' />
      </column>
      <column datatype='string' name='[Location (geo)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Not Vaccinated over Population' datatype='real' name='[Not Vaccinated over Population ]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1352487297497276416]' derivation='User' name='[usr:Calculation_1352487297497276416:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1352487297500737540]' derivation='User' name='[usr:Calculation_1352487297500737540:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[usr:Calculation_1352487297500737540:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[usr:Calculation_1352487297497276416:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Continent' />
        <field-sort-custom-order field='Date' />
        <field-sort-custom-order field='Date Range Selected' />
        <field-sort-custom-order field='Excess Mortality' />
        <field-sort-custom-order field='Excess Mortality Cumulative' />
        <field-sort-custom-order field='Excess Mortality Cumulative Absolute' />
        <field-sort-custom-order field='Excess Mortality Cumulative Per Million' />
        <field-sort-custom-order field='Extreme Poverty' />
        <field-sort-custom-order field='Female Smokers' />
        <field-sort-custom-order field='Hosp Patients' />
        <field-sort-custom-order field='Hosp Patients Per Million' />
        <field-sort-custom-order field='Icu Patients' />
        <field-sort-custom-order field='Icu Patients Per Million' />
        <field-sort-custom-order field='Iso Code' />
        <field-sort-custom-order field='Location' />
        <field-sort-custom-order field='Location (copy)' />
        <field-sort-custom-order field='Location (geo)' />
        <field-sort-custom-order field='Male Smokers' />
        <field-sort-custom-order field='New Tests' />
        <field-sort-custom-order field='New Tests Per Thousand' />
        <field-sort-custom-order field='New Tests Smoothed' />
        <field-sort-custom-order field='New Tests Smoothed Per Thousand' />
        <field-sort-custom-order field='Positive Rate' />
        <field-sort-custom-order field='Tests Per Case' />
        <field-sort-custom-order field='Tests Units' />
        <field-sort-custom-order field='Total Tests' />
        <field-sort-custom-order field='Total Tests Per Thousand' />
        <field-sort-custom-order field='Weekly Hosp Admissions' />
        <field-sort-custom-order field='Weekly Hosp Admissions Per Million' />
        <field-sort-custom-order field='Weekly Icu Admissions' />
        <field-sort-custom-order field='Weekly Icu Admissions Per Million' />
        <field-sort-custom-order field='Aged 65 Older' />
        <field-sort-custom-order field='Aged 70 Older' />
        <field-sort-custom-order field='Cardiovasc Death Rate' />
        <field-sort-custom-order field='Diabetes Prevalence' />
        <field-sort-custom-order field='Fully Vaccinated over Population' />
        <field-sort-custom-order field='Gdp Per Capita' />
        <field-sort-custom-order field='Handwashing Facilities' />
        <field-sort-custom-order field='Hospital Beds Per Thousand' />
        <field-sort-custom-order field='Human Development Index' />
        <field-sort-custom-order field='Life Expectancy' />
        <field-sort-custom-order field='Median Age' />
        <field-sort-custom-order field='New Cases' />
        <field-sort-custom-order field='New Cases Per Million' />
        <field-sort-custom-order field='New Cases Smoothed' />
        <field-sort-custom-order field='New Cases Smoothed Per Million' />
        <field-sort-custom-order field='New Deaths' />
        <field-sort-custom-order field='New Deaths Per Million' />
        <field-sort-custom-order field='New Deaths Smoothed' />
        <field-sort-custom-order field='New Deaths Smoothed Per Million' />
        <field-sort-custom-order field='New Vaccinations' />
        <field-sort-custom-order field='New Vaccinations over Population' />
        <field-sort-custom-order field='New Vaccinations Smoothed' />
        <field-sort-custom-order field='New Vaccinations Smoothed Per Million' />
        <field-sort-custom-order field='Not Vaccinated over Population ' />
        <field-sort-custom-order field='People Fully Vaccinated' />
        <field-sort-custom-order field='People Fully Vaccinated Per Hundred' />
        <field-sort-custom-order field='People Vaccinated' />
        <field-sort-custom-order field='People Vaccinated over Population (delta)' />
        <field-sort-custom-order field='People Vaccinated Per Hundred' />
        <field-sort-custom-order field='Population' />
        <field-sort-custom-order field='Population Density' />
        <field-sort-custom-order field='Reproduction Rate' />
        <field-sort-custom-order field='Stringency Index' />
        <field-sort-custom-order field='Total Boosters' />
        <field-sort-custom-order field='Total Boosters Per Hundred' />
        <field-sort-custom-order field='Total Cases' />
        <field-sort-custom-order field='Total Cases Per Million' />
        <field-sort-custom-order field='Total Deaths' />
        <field-sort-custom-order field='Total Deaths Per Million' />
        <field-sort-custom-order field='Total Vaccinations' />
        <field-sort-custom-order field='Total Vaccinations Per Hundred' />
        <field-sort-custom-order field='Vaccinated over Population' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field='Calculation_1352487297497276416' />
        <field-sort-custom-order field='Share of People Partially Vaccinated Over Population (copy)_1352487297500561410' />
        <field-sort-custom-order field='Calculation_1352487297500737540' />
        <field-sort-custom-order field='Calculation_1352487297497726977' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-04-09#'>
          <calculation class='tableau' formula='#2020-04-09#' />
        </column>
        <column caption='Select End Date' datatype='date' name='[Select Start Date (copy)_1352487297516593157]' param-domain-type='any' role='measure' type='quantitative' value='#2021-10-25#'>
          <calculation class='tableau' formula='#2021-10-25#' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv' id='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv_6B8CC9F184F64DC987430DFEC56A441E'>
            <properties context=''>
              <relation connection='textscan.1csxbem0eg7da21ca38xo0tajjqv' name='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data.csv' table='[Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data#csv]' type='table'>
                <columns character-set='UTF-16LE' header='yes' locale='en_US' separator='&#9;'>
                  <column datatype='string' name='Continent' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='boolean' name='Date Range Selected' ordinal='2' />
                  <column datatype='string' name='Excess Mortality' ordinal='3' />
                  <column datatype='string' name='Excess Mortality Cumulative' ordinal='4' />
                  <column datatype='string' name='Excess Mortality Cumulative Absolute' ordinal='5' />
                  <column datatype='string' name='Excess Mortality Cumulative Per Million' ordinal='6' />
                  <column datatype='string' name='Extreme Poverty' ordinal='7' />
                  <column datatype='string' name='Female Smokers' ordinal='8' />
                  <column datatype='string' name='Hosp Patients' ordinal='9' />
                  <column datatype='string' name='Hosp Patients Per Million' ordinal='10' />
                  <column datatype='string' name='Icu Patients' ordinal='11' />
                  <column datatype='string' name='Icu Patients Per Million' ordinal='12' />
                  <column datatype='string' name='Iso Code' ordinal='13' />
                  <column datatype='string' name='Location' ordinal='14' />
                  <column datatype='string' name='Location (copy)' ordinal='15' />
                  <column datatype='string' name='Location (geo)' ordinal='16' />
                  <column datatype='string' name='Male Smokers' ordinal='17' />
                  <column datatype='string' name='New Tests' ordinal='18' />
                  <column datatype='string' name='New Tests Per Thousand' ordinal='19' />
                  <column datatype='string' name='New Tests Smoothed' ordinal='20' />
                  <column datatype='string' name='New Tests Smoothed Per Thousand' ordinal='21' />
                  <column datatype='string' name='Positive Rate' ordinal='22' />
                  <column datatype='string' name='Tests Per Case' ordinal='23' />
                  <column datatype='string' name='Tests Units' ordinal='24' />
                  <column datatype='string' name='Total Tests' ordinal='25' />
                  <column datatype='string' name='Total Tests Per Thousand' ordinal='26' />
                  <column datatype='string' name='Weekly Hosp Admissions' ordinal='27' />
                  <column datatype='string' name='Weekly Hosp Admissions Per Million' ordinal='28' />
                  <column datatype='string' name='Weekly Icu Admissions' ordinal='29' />
                  <column datatype='string' name='Weekly Icu Admissions Per Million' ordinal='30' />
                  <column datatype='real' name='Aged 65 Older' ordinal='31' />
                  <column datatype='real' name='Aged 70 Older' ordinal='32' />
                  <column datatype='real' name='Cardiovasc Death Rate' ordinal='33' />
                  <column datatype='real' name='Diabetes Prevalence' ordinal='34' />
                  <column datatype='real' name='Fully Vaccinated over Population' ordinal='35' />
                  <column datatype='real' name='Gdp Per Capita' ordinal='36' />
                  <column datatype='real' name='Handwashing Facilities' ordinal='37' />
                  <column datatype='real' name='Hospital Beds Per Thousand' ordinal='38' />
                  <column datatype='real' name='Human Development Index' ordinal='39' />
                  <column datatype='real' name='Life Expectancy' ordinal='40' />
                  <column datatype='real' name='Median Age' ordinal='41' />
                  <column datatype='integer' name='New Cases' ordinal='42' />
                  <column datatype='real' name='New Cases Per Million' ordinal='43' />
                  <column datatype='real' name='New Cases Smoothed' ordinal='44' />
                  <column datatype='real' name='New Cases Smoothed Per Million' ordinal='45' />
                  <column datatype='integer' name='New Deaths' ordinal='46' />
                  <column datatype='real' name='New Deaths Per Million' ordinal='47' />
                  <column datatype='real' name='New Deaths Smoothed' ordinal='48' />
                  <column datatype='real' name='New Deaths Smoothed Per Million' ordinal='49' />
                  <column datatype='integer' name='New Vaccinations' ordinal='50' />
                  <column datatype='real' name='New Vaccinations over Population' ordinal='51' />
                  <column datatype='integer' name='New Vaccinations Smoothed' ordinal='52' />
                  <column datatype='integer' name='New Vaccinations Smoothed Per Million' ordinal='53' />
                  <column datatype='real' name='Not Vaccinated over Population ' ordinal='54' />
                  <column datatype='integer' name='People Fully Vaccinated' ordinal='55' />
                  <column datatype='real' name='People Fully Vaccinated Per Hundred' ordinal='56' />
                  <column datatype='integer' name='People Vaccinated' ordinal='57' />
                  <column datatype='real' name='People Vaccinated over Population (delta)' ordinal='58' />
                  <column datatype='real' name='People Vaccinated Per Hundred' ordinal='59' />
                  <column datatype='integer' name='Population' ordinal='60' />
                  <column datatype='real' name='Population Density' ordinal='61' />
                  <column datatype='real' name='Reproduction Rate' ordinal='62' />
                  <column datatype='real' name='Stringency Index' ordinal='63' />
                  <column datatype='integer' name='Total Boosters' ordinal='64' />
                  <column datatype='real' name='Total Boosters Per Hundred' ordinal='65' />
                  <column datatype='integer' name='Total Cases' ordinal='66' />
                  <column datatype='real' name='Total Cases Per Million' ordinal='67' />
                  <column datatype='integer' name='Total Deaths' ordinal='68' />
                  <column datatype='real' name='Total Deaths Per Million' ordinal='69' />
                  <column datatype='integer' name='Total Vaccinations' ordinal='70' />
                  <column datatype='real' name='Total Vaccinations Per Hundred' ordinal='71' />
                  <column datatype='real' name='Vaccinated over Population' ordinal='72' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0g2yqtv099nnij1eau2tt1c6xiqf'>
      <datasources>
        <datasource caption='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data' name='federated.0g2yqtv099nnij1eau2tt1c6xiqf' />
      </datasources>
      <datasource-dependencies datasource='federated.0g2yqtv099nnij1eau2tt1c6xiqf'>
        <column caption='Filter Selected Date' datatype='boolean' name='[Calculation_1352487297516810246]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='Date &gt;= [Parameters].[Parameter 1] AND [Date]&lt;=[Parameters].[Select Start Date (copy)_1352487297516593157]' />
        </column>
        <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
        <column datatype='string' name='[Location (copy)]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_1352487297516810246]' derivation='None' name='[none:Calculation_1352487297516810246:nk]' pivot='key' type='nominal' />
        <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
        <column-instance column='[Location (copy)]' derivation='None' name='[none:Location (copy):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Calculation_1352487297516810246:nk]'>
        <groupfilter function='member' level='[none:Calculation_1352487297516810246:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Continent:nk]'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:Continent:nk]' />
          <groupfilter function='empty-level' member='[none:Continent:nk]' />
        </groupfilter>
      </filter>
      <filter class='categorical' column='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Location (copy):nk]'>
        <groupfilter function='level-members' level='[none:Location (copy):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='KPI 1 - People Partially Vaccinated'>
      <table>
        <view>
          <datasources>
            <datasource caption='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data' name='federated.0g2yqtv099nnij1eau2tt1c6xiqf' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-04-09#'>
              <calculation class='tableau' formula='#2020-04-09#' />
            </column>
            <column caption='Select End Date' datatype='date' name='[Select Start Date (copy)_1352487297516593157]' param-domain-type='any' role='measure' type='quantitative' value='#2021-10-25#'>
              <calculation class='tableau' formula='#2021-10-25#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0g2yqtv099nnij1eau2tt1c6xiqf'>
            <column caption='Filter Selected Date' datatype='boolean' name='[Calculation_1352487297516810246]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='Date &gt;= [Parameters].[Parameter 1] AND [Date]&lt;=[Parameters].[Select Start Date (copy)_1352487297516593157]' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Location (copy)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[People Vaccinated]' role='measure' type='quantitative' />
            <column-instance column='[People Vaccinated]' derivation='Max' name='[max:People Vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1352487297516810246]' derivation='None' name='[none:Calculation_1352487297516810246:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location (copy)]' derivation='None' name='[none:Location (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Location (copy):nk]</column>
            <column>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Continent:nk]</column>
            <column>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Calculation_1352487297516810246:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Location (copy):nk]' value='Country'>
              <formatted-text>
                <run>Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[max:People Vaccinated:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#ffbe7d' fontsize='15'><![CDATA[<[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[max:People Vaccinated:qk]>]]></run>
                <run bold='true' fontcolor='#ffbe7d' fontsize='8'>Æ  </run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#ffbe7d' fontsize='8'>People only partly vaccinated against COVID-19</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2D48FD25-F07D-4CF8-8635-EF41FDEC7BBC}' />
    </worksheet>
    <worksheet name='KPI 2 - People Fully Vaccinated'>
      <table>
        <view>
          <datasources>
            <datasource caption='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data' name='federated.0g2yqtv099nnij1eau2tt1c6xiqf' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-04-09#'>
              <calculation class='tableau' formula='#2020-04-09#' />
            </column>
            <column caption='Select End Date' datatype='date' name='[Select Start Date (copy)_1352487297516593157]' param-domain-type='any' role='measure' type='quantitative' value='#2021-10-25#'>
              <calculation class='tableau' formula='#2021-10-25#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0g2yqtv099nnij1eau2tt1c6xiqf'>
            <column caption='Filter Selected Date' datatype='boolean' name='[Calculation_1352487297516810246]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='Date &gt;= [Parameters].[Parameter 1] AND [Date]&lt;=[Parameters].[Select Start Date (copy)_1352487297516593157]' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Location (copy)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[People Fully Vaccinated]' role='measure' type='quantitative' />
            <column-instance column='[People Fully Vaccinated]' derivation='Max' name='[max:People Fully Vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1352487297516810246]' derivation='None' name='[none:Calculation_1352487297516810246:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location (copy)]' derivation='None' name='[none:Location (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Location (copy):nk]</column>
            <column>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Continent:nk]</column>
            <column>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Calculation_1352487297516810246:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[max:People Fully Vaccinated:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#ffbe7d' fontsize='15'><![CDATA[<[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[max:People Fully Vaccinated:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#ffbe7d' fontsize='8'>People only partly vaccinated against COVID-19</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DB1EBF86-C017-43E7-A000-16FB76AB8468}' />
    </worksheet>
    <worksheet name='KPI 3 - Share of People Not Vaccinated'>
      <table>
        <view>
          <datasources>
            <datasource caption='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data' name='federated.0g2yqtv099nnij1eau2tt1c6xiqf' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-04-09#'>
              <calculation class='tableau' formula='#2020-04-09#' />
            </column>
            <column caption='Select End Date' datatype='date' name='[Select Start Date (copy)_1352487297516593157]' param-domain-type='any' role='measure' type='quantitative' value='#2021-10-25#'>
              <calculation class='tableau' formula='#2021-10-25#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0g2yqtv099nnij1eau2tt1c6xiqf'>
            <column caption='Share of People Partially Vaccinated Over Population' datatype='real' name='[Calculation_1352487297497276416]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([People Vaccinated])/ MAX([Population])' />
            </column>
            <column caption='Share of People Not Vaccinated Over Population' datatype='real' name='[Calculation_1352487297497726977]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1-[Calculation_1352487297497276416]' />
            </column>
            <column caption='Filter Selected Date' datatype='boolean' name='[Calculation_1352487297516810246]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='Date &gt;= [Parameters].[Parameter 1] AND [Date]&lt;=[Parameters].[Select Start Date (copy)_1352487297516593157]' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Location (copy)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[People Vaccinated]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1352487297516810246]' derivation='None' name='[none:Calculation_1352487297516810246:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location (copy)]' derivation='None' name='[none:Location (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1352487297497726977]' derivation='User' name='[usr:Calculation_1352487297497726977:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Location (copy):nk]</column>
            <column>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Continent:nk]</column>
            <column>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Calculation_1352487297516810246:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' data-class='total' field='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[usr:Calculation_1352487297497726977:qk]' value='p0.00%' />
            <format attr='text-format' data-class='subtotal' field='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[usr:Calculation_1352487297497726977:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[usr:Calculation_1352487297497726977:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#ffbe7d' fontsize='15'><![CDATA[<[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[usr:Calculation_1352487297497726977:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#ffbe7d' fontsize='8'>Share of People Not Vaccinated Over Population</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C1D54FBC-A5F5-4831-862F-70FF805FE9A2}' />
    </worksheet>
    <worksheet name='Vacc or Fully Vacc per Location'>
      <table>
        <view>
          <datasources>
            <datasource caption='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data' name='federated.0g2yqtv099nnij1eau2tt1c6xiqf' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-04-09#'>
              <calculation class='tableau' formula='#2020-04-09#' />
            </column>
            <column caption='Select End Date' datatype='date' name='[Select Start Date (copy)_1352487297516593157]' param-domain-type='any' role='measure' type='quantitative' value='#2021-10-25#'>
              <calculation class='tableau' formula='#2021-10-25#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0g2yqtv099nnij1eau2tt1c6xiqf'>
            <column caption='Share of People Partially Vaccinated Over Population' datatype='real' name='[Calculation_1352487297497276416]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([People Vaccinated])/ MAX([Population])' />
            </column>
            <column caption='Share of People Fully Vaccinated Over Population' datatype='real' name='[Calculation_1352487297500737540]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([People Fully Vaccinated])/ MAX([Population])' />
            </column>
            <column caption='Filter Selected Date' datatype='boolean' name='[Calculation_1352487297516810246]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='Date &gt;= [Parameters].[Parameter 1] AND [Date]&lt;=[Parameters].[Select Start Date (copy)_1352487297516593157]' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Location (copy)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column datatype='integer' name='[People Fully Vaccinated]' role='measure' type='quantitative' />
            <column datatype='integer' name='[People Vaccinated]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1352487297516810246]' derivation='None' name='[none:Calculation_1352487297516810246:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location (copy)]' derivation='None' name='[none:Location (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1352487297497276416]' derivation='User' name='[usr:Calculation_1352487297497276416:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1352487297500737540]' derivation='User' name='[usr:Calculation_1352487297500737540:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Location:nk]' direction='DESC' using='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[usr:Calculation_1352487297497276416:qk]' />
          <slices>
            <column>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Location (copy):nk]</column>
            <column>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Continent:nk]</column>
            <column>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Calculation_1352487297516810246:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[usr:Calculation_1352487297500737540:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[usr:Calculation_1352487297500737540:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[usr:Calculation_1352487297497276416:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[usr:Calculation_1352487297497276416:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[usr:Calculation_1352487297500737540:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[usr:Calculation_1352487297497276416:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[:Measure Names]' />
              <text column='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[usr:Calculation_1352487297497276416:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[usr:Calculation_1352487297500737540:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[:Measure Names]' />
              <text column='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[usr:Calculation_1352487297500737540:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Location:nk]</rows>
        <cols>([federated.0g2yqtv099nnij1eau2tt1c6xiqf].[usr:Calculation_1352487297497276416:qk] + [federated.0g2yqtv099nnij1eau2tt1c6xiqf].[usr:Calculation_1352487297500737540:qk])</cols>
      </table>
      <simple-id uuid='{25034F20-CD33-4108-AC87-2DDF6C5B4829}' />
    </worksheet>
    <worksheet name='Vaccination over GDP'>
      <table>
        <view>
          <datasources>
            <datasource caption='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data' name='federated.0g2yqtv099nnij1eau2tt1c6xiqf' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-04-09#'>
              <calculation class='tableau' formula='#2020-04-09#' />
            </column>
            <column caption='Select End Date' datatype='date' name='[Select Start Date (copy)_1352487297516593157]' param-domain-type='any' role='measure' type='quantitative' value='#2021-10-25#'>
              <calculation class='tableau' formula='#2021-10-25#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0g2yqtv099nnij1eau2tt1c6xiqf'>
            <column caption='Filter Selected Date' datatype='boolean' name='[Calculation_1352487297516810246]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='Date &gt;= [Parameters].[Parameter 1] AND [Date]&lt;=[Parameters].[Select Start Date (copy)_1352487297516593157]' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Gdp Per Capita]' role='measure' type='quantitative' />
            <column datatype='string' name='[Location (copy)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column datatype='real' name='[People Vaccinated Per Hundred]' role='measure' type='quantitative' />
            <column-instance column='[Gdp Per Capita]' derivation='Max' name='[max:Gdp Per Capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[People Vaccinated Per Hundred]' derivation='Max' name='[max:People Vaccinated Per Hundred:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1352487297516810246]' derivation='None' name='[none:Calculation_1352487297516810246:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location (copy)]' derivation='None' name='[none:Location (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Location (copy):nk]</column>
            <column>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Continent:nk]</column>
            <column>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Calculation_1352487297516810246:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Location:nk]' />
              <lod column='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Location:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='log' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#40648a' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#edc94867' />
                <format attr='stroke-size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[max:People Vaccinated Per Hundred:qk]</rows>
        <cols>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[max:Gdp Per Capita:qk]</cols>
      </table>
      <simple-id uuid='{5ADD49F8-6952-44DD-86D6-9C78A5F36EAD}' />
    </worksheet>
    <worksheet name='Vaccination per hundred'>
      <table>
        <view>
          <datasources>
            <datasource caption='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data' name='federated.0g2yqtv099nnij1eau2tt1c6xiqf' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-04-09#'>
              <calculation class='tableau' formula='#2020-04-09#' />
            </column>
            <column caption='Select End Date' datatype='date' name='[Select Start Date (copy)_1352487297516593157]' param-domain-type='any' role='measure' type='quantitative' value='#2021-10-25#'>
              <calculation class='tableau' formula='#2021-10-25#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0g2yqtv099nnij1eau2tt1c6xiqf'>
            <column caption='Filter Selected Date' datatype='boolean' name='[Calculation_1352487297516810246]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='Date &gt;= [Parameters].[Parameter 1] AND [Date]&lt;=[Parameters].[Select Start Date (copy)_1352487297516593157]' />
            </column>
            <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Location (copy)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Location (geo)]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[People Vaccinated]' role='measure' type='quantitative' />
            <column-instance column='[People Vaccinated]' derivation='Max' name='[max:People Vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1352487297516810246]' derivation='None' name='[none:Calculation_1352487297516810246:nk]' pivot='key' type='nominal' />
            <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location (copy)]' derivation='None' name='[none:Location (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Location (geo)]' derivation='None' name='[none:Location (geo):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Location (copy):nk]</column>
            <column>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Continent:nk]</column>
            <column>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Calculation_1352487297516810246:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[Longitude (generated)]' field-type='quantitative' max='16631045.721877515' min='-38357749.763531618' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[Latitude (generated)]' field-type='quantitative' max='21344331.970334847' min='-48569.291492250341' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[max:People Vaccinated:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d6dee5</color>
                <color>#bccbda</color>
                <color>#a5bace</color>
                <color>#8fa9c3</color>
                <color>#7a99b7</color>
                <color>#678aab</color>
                <color>#557ba0</color>
                <color>#456e95</color>
                <color>#376189</color>
                <color>#2a557e</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[max:People Vaccinated:qk]' />
              <lod column='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Location (geo):nk]' />
              <geometry column='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[Latitude (generated)]</rows>
        <cols>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1CA00423-FBAC-42AC-896F-95D5DA443760}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='2160' maxwidth='1120' minheight='2160' minwidth='1120' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Copy of country_vaccinations.csv+ (Multiple Connections)_Full Data' name='federated.0g2yqtv099nnij1eau2tt1c6xiqf' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Start Date' datatype='date' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='#2020-04-09#'>
          <calculation class='tableau' formula='#2020-04-09#' />
        </column>
        <column caption='Select End Date' datatype='date' name='[Select Start Date (copy)_1352487297516593157]' param-domain-type='any' role='measure' type='quantitative' value='#2021-10-25#'>
          <calculation class='tableau' formula='#2021-10-25#' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0g2yqtv099nnij1eau2tt1c6xiqf'>
        <column datatype='string' name='[Continent]' role='dimension' type='nominal' />
        <column datatype='string' name='[Location (copy)]' role='dimension' type='nominal' />
        <column-instance column='[Continent]' derivation='None' name='[none:Continent:nk]' pivot='key' type='nominal' />
        <column-instance column='[Location (copy)]' derivation='None' name='[none:Location (copy):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='89213' id='10' param='horz' type-v2='layout-flow' w='98572' x='714' y='10417'>
            <zone h='89213' id='5' type-v2='layout-basic' w='98572' x='714' y='10417'>
              <zone h='36563' id='3' name='Vacc or Fully Vacc per Location' w='98572' x='714' y='17083'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22147' id='8' name='Vaccination per hundred' w='98572' x='714' y='53646'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='23837' id='12' name='Vaccination over GDP' w='98572' x='714' y='75793'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6666' id='13' param='horz' type-v2='layout-flow' w='33750' x='714' y='10417'>
                <zone h='6666' id='14' param='vert' type-v2='layout-flow' w='33750' x='714' y='10417'>
                  <zone fixed-size='126' h='5833' id='15' is-fixed='true' param='horz' type-v2='layout-flow' w='33750' x='714' y='10417'>
                    <zone h='5648' id='16' name='KPI 1 - People Partially Vaccinated' w='33750' x='714' y='10417'>
                      <layout-cache fixed-size-h='114' fixed-size-w='260' type-h='fixed' type-w='fixed' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='6666' id='21' name='KPI 2 - People Fully Vaccinated' w='34286' x='34464' y='10417'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6666' id='24' name='KPI 3 - Share of People Not Vaccinated' w='30536' x='68750' y='10417'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='10047' id='23' param='vert' type-v2='layout-flow' w='98572' x='714' y='370'>
            <zone h='2407' id='17' mode='checkdropdown' name='KPI 1 - People Partially Vaccinated' param='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Continent:nk]' show-apply='true' type-v2='filter' w='98572' x='714' y='370'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='2407' id='18' mode='checkdropdown' name='KPI 1 - People Partially Vaccinated' param='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Location (copy):nk]' type-v2='filter' w='98572' x='714' y='2777'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='2407' id='19' mode='datetime' param='[Parameters].[Select Start Date (copy)_1352487297516593157]' type-v2='paramctrl' w='98572' x='714' y='5184'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='2407' id='20' mode='datetime' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='98572' x='714' y='7591'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='34' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='99260' id='33' param='vert' type-v2='layout-flow' w='98572' x='714' y='370'>
                <zone h='2407' id='19' mode='datetime' param='[Parameters].[Select Start Date (copy)_1352487297516593157]' type-v2='paramctrl' w='98572' x='714' y='5184'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2407' id='20' mode='datetime' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='98572' x='714' y='7591'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2407' id='17' mode='checkdropdown' name='KPI 1 - People Partially Vaccinated' param='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Continent:nk]' show-apply='true' type-v2='filter' w='98572' x='714' y='370'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2407' id='18' mode='checkdropdown' name='KPI 1 - People Partially Vaccinated' param='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Location (copy):nk]' type-v2='filter' w='98572' x='714' y='2777'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='114' h='5648' id='16' is-fixed='true' name='KPI 1 - People Partially Vaccinated' w='33750' x='714' y='10417'>
                  <layout-cache fixed-size-h='114' fixed-size-w='260' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='136' h='6666' id='21' is-fixed='true' name='KPI 2 - People Fully Vaccinated' w='34286' x='34464' y='10417'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='136' h='6666' id='24' is-fixed='true' name='KPI 3 - Share of People Not Vaccinated' w='30536' x='68750' y='10417'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36563' id='3' is-fixed='true' name='Vacc or Fully Vacc per Location' w='98572' x='714' y='17083'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='22147' id='8' is-fixed='true' name='Vaccination per hundred' w='98572' x='714' y='53646'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='23837' id='12' is-fixed='true' name='Vaccination over GDP' w='98572' x='714' y='75793'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DE18F7CD-5F2A-419F-8A83-5019AD57FAA4}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='KPI 1 - People Partially Vaccinated' />
        <viewpoint name='KPI 2 - People Fully Vaccinated' />
        <viewpoint name='KPI 3 - Share of People Not Vaccinated' />
        <viewpoint name='Vacc or Fully Vacc per Location' />
        <viewpoint name='Vaccination over GDP'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Vaccination per hundred'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='18' />
      <simple-id uuid='{692DE5AE-DD67-42C0-B43D-D35A0A656025}' />
    </window>
    <window class='worksheet' name='KPI 1 - People Partially Vaccinated'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Continent:nk]' show-apply='true' type='filter' />
            <card mode='pattern' param='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Location (copy):nk]' type='filter' />
            <card mode='datetime' param='[Parameters].[Select Start Date (copy)_1352487297516593157]' type='parameter' />
            <card mode='datetime' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Calculation_1352487297516810246:nk]</field>
            <field>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Continent:nk]</field>
            <field>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Location (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5BB0600B-3DE5-4938-85CE-651400D3E1BA}' />
    </window>
    <window class='worksheet' name='KPI 2 - People Fully Vaccinated'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{779FB0DA-B55A-4147-BC04-8EE292647E9F}' />
    </window>
    <window class='worksheet' name='KPI 3 - Share of People Not Vaccinated'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{120FABF1-4495-4D61-8F66-4217B8027585}' />
    </window>
    <window class='worksheet' name='Vacc or Fully Vacc per Location'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='1' param='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8581A947-6BD2-44AA-828D-0A626C80FE52}' />
    </window>
    <window class='worksheet' name='Vaccination per hundred'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[max:People Vaccinated:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[max:People Vaccinated:qk]</field>
            <field>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Location (geo):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{161945B9-53FD-43E4-8BB8-902673F88429}' />
    </window>
    <window class='worksheet' name='Vaccination over GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0g2yqtv099nnij1eau2tt1c6xiqf].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5C1C3400-0AEB-4AF7-9BE9-F97D58244DBC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='240' name='Dashboard 1' width='240'>
      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
    </thumbnail>
    <thumbnail height='59' name='KPI 1 - People Partially Vaccinated' width='240'>
      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
      RReAQ+iJGEkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='59' name='KPI 2 - People Fully Vaccinated' width='240'>
      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
      uobi/wFulp1TQZZt7QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='60' name='KPI 3 - Share of People Not Vaccinated' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Vacc or Fully Vacc per Location' width='240'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='240' name='Vaccination over GDP' width='240'>
      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
      Bc4/AIG3EPp5UWMBAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='240' name='Vaccination per hundred' width='240'>
      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
      aQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
